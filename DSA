from cryptography.hazmat.backends import default_backend
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.asymmetric import dsa
from cryptography.hazmat.primitives.serialization import Encoding, PublicFormat

# Generate DSA parameters
parameters = dsa.generate_parameters(key_size=1024, backend=default_backend())

# Generate DSA private and public keys
private_key = parameters.generate_private_key()
public_key = private_key.public_key()

# Message to be signed
message = b"This is a sample message."

# Create a DSA signature
signature = private_key.sign(message, hashes.SHA256())

# Verify the signature
try:
    public_key.verify(signature, message, hashes.SHA256())
    print("Signature is valid.")
except:
    print("Signature is invalid.")
